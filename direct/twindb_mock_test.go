// Code generated by MockGen. DO NOT EDIT.
// Source: direct/twindb.go

// Package direct is a generated GoMock package.
package direct

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTwinDB is a mock of TwinDB interface.
type MockTwinDB struct {
	ctrl     *gomock.Controller
	recorder *MockTwinDBMockRecorder
}

// MockTwinDBMockRecorder is the mock recorder for MockTwinDB.
type MockTwinDBMockRecorder struct {
	mock *MockTwinDB
}

// NewMockTwinDB creates a new mock instance.
func NewMockTwinDB(ctrl *gomock.Controller) *MockTwinDB {
	mock := &MockTwinDB{ctrl: ctrl}
	mock.recorder = &MockTwinDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTwinDB) EXPECT() *MockTwinDBMockRecorder {
	return m.recorder
}

// GetTwin mocks base method.
func (m *MockTwinDB) GetTwin(id uint32) (Twin, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTwin", id)
	ret0, _ := ret[0].(Twin)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTwin indicates an expected call of GetTwin.
func (mr *MockTwinDBMockRecorder) GetTwin(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTwin", reflect.TypeOf((*MockTwinDB)(nil).GetTwin), id)
}
